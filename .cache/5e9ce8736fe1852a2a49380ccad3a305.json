{"dependencies":[{"name":"moment","loc":{"line":2,"column":23}},{"name":"./services/coinbase","loc":{"line":6,"column":25}}],"generated":{"js":"/* global Mavo, echarts */\nconst moment = require('moment')\n// Const v = require('voca')\n// const echarts = require('echarts')\n\nconst coinbase = require('./services/coinbase')\n\nconst $ = s => document.querySelector(s)\n\nconst initHTMLFields = (base, currency, basesRef, currenciesRef) => {\n  const currencies = $('select[property=\\'currency\\']')\n  const bases = $('select[property=\\'base\\']')\n\n  basesRef.forEach(elt => {\n    const opt1 = document.createElement('option')\n    opt1.text = elt.text\n    opt1.value = elt.value\n    bases.add(opt1)\n  })\n\n  currenciesRef.forEach(elt => {\n    const opt2 = document.createElement('option')\n    opt2.text = elt.text\n    opt2.value = elt.value\n    currencies.add(opt2)\n  })\n\n  currencies.value = currency\n  bases.value = base\n}\n\nconst drawChart = () => {\n  const myChart = echarts.init($('#myChart'))\n\n  const option = {\n    title: {\n      text: 'ECharts entry example'\n    },\n    tooltip: {},\n    legend: {\n      data: ['Sales']\n    },\n    xAxis: {\n      data: ['shirt', 'cardign', 'chiffon shirt', 'pants', 'heels', 'socks']\n    },\n    yAxis: {},\n    series: [{\n      name: 'Sales',\n      type: 'bar',\n      data: [5, 20, 36, 10, 10, 20]\n    }]\n  }\n\n  myChart.setOption(option)\n}\n\nconst lookupSpot = () => {\n  const selCurrency = $('select[property=\\'currency\\']').value\n  const selBase = $('select[property=\\'base\\']').value\n\n  coinbase.spot(selCurrency).then(res => {\n    const price = parseFloat(res.find(elt => elt.base === selBase).amount)\n    $('input[property=\\'spot\\']').value = price\n\n    coinbase.historic('year').then(res => {\n      const prices52w = res.prices.map(x => parseFloat(x.price))\n      const min = prices52w.reduce((a, b) => Math.min(a, b))\n      const max = prices52w.reduce((a, b) => Math.max(a, b))\n      $('input[property=\\'min52w\\']').value = min\n      $('input[property=\\'max52w\\']').value = max\n      $('input[property=\\'range52w\\']').value = price\n    })\n\n    $('input[property=\\'checked_time\\']').value = moment().format('H:mm:ss')\n    $('input[property=\\'checked_date\\']').value = moment().format('MM/DD/YYYY')\n  })\n\n  coinbase.historic('week').then(res => {\n    const prices2d = res.prices.map(x => parseFloat(x.price)).slice(0, 96)\n    const prices1d = prices2d.slice(0, 48)\n    const close1d = prices1d[0]\n    const [open1d] = prices1d.slice(-1)\n    $('input[property=\\'close1d\\']').value = close1d\n    $('input[property=\\'open1d\\']').value = open1d\n    $('input[property=\\'performance2d\\']').value = prices2d\n  })\n}\n\nMavo.Functions.onchange = (base, currency) => {\n  if (base && currency) {\n    console.log('Updating data...')\n    lookupSpot()\n    drawChart(base, currency)\n  }\n  return `${base} ${currency}`\n}\n\ninitHTMLFields('BTC', 'EUR',\n  [{text: 'BITCOIN', value: 'BTC'}, {text: 'ETHEREUM', value: 'ETH'}, {text: 'LITECOIN', value: 'LTC'}],\n  [{text: 'EURO', value: 'EUR'}, {text: 'US DOLLAR', value: 'USD'}])\n\ndrawChart('BTC', 'EUR')\n"},"hash":"3f61929a19e5c439c939e045d8b3680f"}